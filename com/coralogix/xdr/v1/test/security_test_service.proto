syntax = "proto3";

package com.coralogix.xdr.v1.test;

import "com/coralogix/xdr/v1/audit_log.proto";
import "com/coralogix/xdr/v1/rule/security_rule.proto";
import "com/coralogix/xdr/v1/policy/security_policy.proto";
import "com/coralogix/xdr/v1/provider/provider.proto";
import "com/coralogix/xdr/v1/test/security_test_breakdown.proto";
import "com/coralogix/xdr/v1/test/security_tests_overview.proto";
import "com/coralogix/xdr/v1/test/security_test_result.proto";
import "com/coralogix/xdr/v1/filter/security_test_filter.proto";

import "google/api/annotations.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

service SecurityTestService {
  // Maybe it would be better to be a post in the future - if we decide to support pagination
  rpc GetSecurityTestOverview(GetSecurityTestsOverviewRequest) returns (GetSecurityTestsOverviewResponse) {
    option (audit_log_description).description = "get security tests overview - stats grouped by day";
    option (google.api.http) = {
      post: "/xdr/v1/test/overview/{execution_id}"
      body: "*"
    };
  }

  rpc GetSecurityTestBreakdown(GetSecurityTestBreakdownRequest) returns (GetSecurityTestBreakdownResponse) {
    option (audit_log_description).description = "get security test breakdown";
    option (google.api.http) = {
      post: "/xdr/v1/test/breakdown/{execution_id}"
      body: "*"
    };
  }

  rpc GetSecurityTestResults(GetSecurityTestResultsRequest) returns (GetSecurityTestResultsResponse) {
    option (audit_log_description).description = "get security test results";
    option (google.api.http) = {
      post: "/xdr/v1/test/results/{execution_id}"
      body: "*"
    };
  }

  rpc GetSecurityTestResultsByRuleCategory(GetSecurityTestResultsByRuleCategoryRequest) returns (GetSecurityTestResultsByRuleCategoryResponse) {
    option (audit_log_description).description = "get security test results grouped by rule category";
    option (google.api.http) = {
      post: "/xdr/v1/security-test/group-by-rule-category"
      body: "*"
    };
  }

  rpc GetSecurityTestResultsByPolicyCategory(GetSecurityTestResultsByPolicyCategoryRequest) returns (GetSecurityTestResultsByPolicyCategoryResponse) {
    option (audit_log_description).description = "get security test results grouped by policy category";
    option (google.api.http) = {
      post: "/xdr/v1/security-test/group-by-policy-category"
      body: "*"
    };
  }

  rpc GetResourceResultsByResourceCategory(GetResourceResultsByResourceCategoryRequest) returns (GetResourceResultsByResourceCategoryResponse) {
    option (audit_log_description).description = "get resource test results grouped by resource category";
    option (google.api.http) = {
      post: "/xdr/v1/security-test/resource-results-by-resource-category"
      body: "*"
    };
  }

  rpc GetResourceResultsByRuleCategory(GetResourceResultsByRuleCategoryRequest) returns (GetResourceResultsByRuleCategoryResponse) {
    option (audit_log_description).description = "get resource test results grouped by rule category";
    option (google.api.http) = {
      post: "/xdr/v1/security-test/resource-results-by-rule-category"
      body: "*"
    };
  }

  rpc GetResourceResults(GetResourceResultsRequest) returns (GetResourceResultsResponse) {
    option (audit_log_description).description = "get resource results";
    option (google.api.http) = {
      post: "/xdr/v1/test/resource/results/{execution_id}"
      body: "*"
    };
  }
}

message GetSecurityTestsOverviewRequest {
  optional com.coralogix.xdr.v1.filter.SecurityTestFilter filter = 1;
}

message GetSecurityTestsOverviewResponse {
  SecurityTestsOverview overview = 1;
}

message GetSecurityTestBreakdownRequest {
  // Defaults to latest
  optional google.protobuf.StringValue execution_id = 1;
  optional com.coralogix.xdr.v1.filter.SecurityTestFilter filter = 2;
}

message GetSecurityTestBreakdownResponse {
  SecurityTestBreakdown test_breakdown = 1;
}

message GetSecurityTestResultsRequest {
  optional google.protobuf.StringValue execution_id = 1;
  optional google.protobuf.StringValue test_identity = 2;
  optional com.coralogix.xdr.v1.filter.SecurityTestFilter filter = 3;
}

message GetSecurityTestResultsResponse {
  google.protobuf.StringValue execution_id = 1; // UUID
  SecurityTestItem security_test_item = 2;
  // This should be optimized with paginated events maybe - leaving that as it's for now
  repeated SecurityTestResult results = 3;
  google.protobuf.Timestamp executed_at = 4;
  repeated com.coralogix.xdr.v1.policy.SecurityPolicy related_policies = 5;
}

message GetSecurityTestResultsByRuleCategoryRequest {
  // Defaults to latest
  optional google.protobuf.StringValue execution_id = 1;
  optional com.coralogix.xdr.v1.filter.SecurityTestFilter filter = 2;
}

message GetSecurityTestResultsByRuleCategoryResponse {
  message RuleCategoryWithTestResults {
    com.coralogix.xdr.v1.rule.SecurityRuleCategory rule_category = 1;
    repeated SecurityTestItem security_test_items = 2;
  }
  google.protobuf.StringValue execution_id = 1;
  repeated RuleCategoryWithTestResults results = 2;
}

message GetSecurityTestResultsByPolicyCategoryRequest {
  optional google.protobuf.StringValue execution_id = 1;
  optional com.coralogix.xdr.v1.filter.SecurityTestFilter filter = 2;
}

message GetSecurityTestResultsByPolicyCategoryResponse {
  message CategoryNode {
    repeated com.coralogix.xdr.v1.test.SecurityTestItem security_test_items = 1;
    repeated CategoryNode child_categories = 2;
    com.coralogix.xdr.v1.policy.SecurityPolicyCategory category = 3;
  }

  google.protobuf.StringValue execution_id = 1;
  repeated CategoryNode root_categories = 2;
}

message GetResourceResultsByResourceCategoryRequest {
  optional google.protobuf.StringValue execution_id = 1;
  optional com.coralogix.xdr.v1.filter.SecurityTestFilter filter = 2;
}

message GetResourceResultsByResourceCategoryResponse {

  message ResourceResults {
    google.protobuf.StringValue resource_name = 1;
    google.protobuf.StringValue service_name = 2;
    google.protobuf.UInt32Value passed_count = 3;
    google.protobuf.UInt32Value failed_count = 4;
    google.protobuf.BoolValue is_active = 5;
  }

  message ResourceCategoryGroup {
    com.coralogix.xdr.v1.rule.ResourceCategory resource_category = 1;
    repeated ResourceResults resource_results = 2;
  }

  google.protobuf.StringValue execution_id = 1;
  repeated ResourceCategoryGroup resource_category_groups = 2;
}

message GetResourceResultsByRuleCategoryRequest {
  optional google.protobuf.StringValue execution_id = 1;
  optional com.coralogix.xdr.v1.filter.SecurityTestFilter filter = 2;
}

message GetResourceResultsByRuleCategoryResponse {

  message ResourceResults {
    google.protobuf.StringValue resource_name = 1;
    google.protobuf.StringValue service_name = 2;
    google.protobuf.UInt32Value passed_count = 3;
    google.protobuf.UInt32Value failed_count = 4;
    google.protobuf.BoolValue is_active = 5;
  }

  message RuleCategoryGroup {
    com.coralogix.xdr.v1.rule.SecurityRuleCategory rule_category = 1;
    repeated ResourceResults resource_results = 2;
  }

  google.protobuf.StringValue execution_id = 1;
  repeated RuleCategoryGroup rule_category_groups = 2;
}

message GetResourceResultsRequest {
  optional google.protobuf.StringValue execution_id = 1;
  // Af of now, resource_name is considered as the identifier of the resource
  google.protobuf.StringValue resource_id = 2;
  optional com.coralogix.xdr.v1.filter.SecurityTestFilter filter = 3;
}

message GetResourceResultsResponse {
  message ResourceItem {
    google.protobuf.StringValue resource_id = 1;
    google.protobuf.StringValue resource_name = 2;
    com.coralogix.xdr.v1.provider.Provider provider = 3;
    google.protobuf.StringValue region = 4;
    google.protobuf.StringValue account = 5;
    google.protobuf.UInt32Value passed_count = 6;
    google.protobuf.UInt32Value failed_count = 7;
  }

  message TestResult {
    TestSubjectDetails subject_details = 1;
    SecurityTestResultStatus result_status = 2;
    com.coralogix.xdr.v1.rule.SecurityRule rule = 3;
    repeated com.coralogix.xdr.v1.policy.SecurityPolicy related_policies = 4;
  }

  google.protobuf.StringValue execution_id = 1; // UUID
  ResourceItem resource_item = 2;
  repeated TestResult results = 3;
  google.protobuf.Timestamp executed_at = 4;
}
