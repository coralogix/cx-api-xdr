syntax = "proto3";

package com.coralogix.xdr.v1.policy;

import "com/coralogix/xdr/v1/audit_log.proto";
import "com/coralogix/xdr/v1/policy/security_policy.proto";
import "com/coralogix/xdr/v1/filter/security_test_filter.proto";

import "google/protobuf/wrappers.proto";
import "google/protobuf/descriptor.proto";
import "google/api/annotations.proto";

service SecurityPolicyService {
  rpc GetSecurityPolicy(GetSecurityPolicyRequest) returns (GetSecurityPolicyResponse) {
    option (audit_log_description).description = "get security policy";
    option (google.api.http) = {
      get: "/xdr/v1/security_policy/{id}"
      response_body: "security_policy"
    };
  }

  rpc GetSecurityPolicies(GetSecurityPoliciesRequest) returns (GetSecurityPoliciesResponse) {
    option (audit_log_description).description = "get security policies";
    option (google.api.http) = {
      post: "/xdr/v1/get_security_policies"
      body: "*"
    };
  }

  rpc GetSecurityPoliciesWithTestResultsSummary(GetSecurityPoliciesWithTestResultsSummaryRequest) returns (GetSecurityPoliciesWithTestResultsSummaryResponse) {
    option (audit_log_description).description = "get security policies with test results summary";
    option (google.api.http) = {
      post: "/xdr/v1/get_security_policies_with_test_results_summary"
      body: "*"
    };
  }
}

service SecurityPolicyManagementService {
  rpc CreateSecurityPolicy(CreateSecurityPolicyRequest) returns (CreateSecurityPolicyResponse) {
    option (audit_log_description).description = "create security policy";
    option (google.api.http) = {
      post: "/xdr/management/v1/security_policy"
      body: "*"
      response_body: "security_policy"
    };
  }

  rpc UpdateSecurityPolicy(UpdateSecurityPolicyRequest) returns (UpdateSecurityPolicyResponse) {
    option (audit_log_description).description = "update security policy";
    option (google.api.http) = {
      put: "/xdr/management/v1/security_policy"
      body: "*"
      response_body: "security_policy"
    };
  }

  rpc DeleteSecurityPolicy(DeleteSecurityPolicyRequest) returns (DeleteSecurityPolicyResponse) {
    option (audit_log_description).description = "delete security policy";
    option (google.api.http) = {
      delete: "/xdr/management/v1/security_policy/{id}"
      body: "*"
    };
  }
}

message GetSecurityPolicyRequest {
  google.protobuf.StringValue id = 1;
}

message GetSecurityPolicyResponse {
  optional SecurityPolicy security_policy = 1;
}

message GetSecurityPoliciesRequest {
  // Empty for now
}

message GetSecurityPoliciesResponse {
  repeated SecurityPolicy data = 1;
}

message GetSecurityPoliciesWithTestResultsSummaryRequest {
  optional google.protobuf.StringValue execution_id = 1;
  optional com.coralogix.xdr.v1.filter.SecurityTestFilter filter = 2;
}

message GetSecurityPoliciesWithTestResultsSummaryResponse {
  message SecurityPolicyWithTestResultsSummary {
    SecurityPolicy security_policy = 1;
    google.protobuf.UInt32Value passed_count = 2;
    google.protobuf.UInt32Value failed_count = 3;
    google.protobuf.UInt32Value insights_count = 4;
  }
  google.protobuf.StringValue execution_id = 1;
  repeated SecurityPolicyWithTestResultsSummary summaries = 2;
}

message CreateSecurityPolicyRequest {
  google.protobuf.StringValue name = 1;
  google.protobuf.StringValue description = 2;
  google.protobuf.StringValue title = 3;
}

message CreateSecurityPolicyResponse {
  SecurityPolicy security_policy = 1;
}

message UpdateSecurityPolicyRequest {
  google.protobuf.StringValue id = 1;
  google.protobuf.StringValue name = 2;
  google.protobuf.StringValue description = 3;
  google.protobuf.StringValue title = 4;
}

message UpdateSecurityPolicyResponse {
  SecurityPolicy security_policy = 1;
}

message DeleteSecurityPolicyRequest {
  google.protobuf.StringValue id = 1;
}

message DeleteSecurityPolicyResponse {
  // Empty
}
